#*
Agenda:


语法参考
1.变量定义
2.访问属性
命令调用

动作指令
1.#set – 建立变量对值的引用
2.#if/#elseif/#else-条件判断
3.#foreach---使用循环通过列表迭代对象
4.#include – 在模板中引入本地文件，不用Velocity解析这个文件
5.#parse – 在模板引用处使用Velocity解析另一个模板输出
6.#stop – 中断模板解析
7.#macro – 让用户可以定义宏操作(Velocimacro (VM):一组实现特定功能的VTL)

Comments 注解
1.单行注解
2.多行注解

*#

## 设置变量
#set( $title = "ksc-fe" )

## 获取变量
${title}

## 如果变量没有定义，则需要加感叹号
${page}
$!{page}


## 条件语句
#set( $var = "" )
#if ($var == "cdn")
	i'm cdn 
#elseif ($var == "rds") 
	i'm rds
#else
	i'm console
#end



## 循环
<p>循环</p>
#foreach($item in ${data.users})
  ${item.id}	<br>
  ${item.name}	<br>
#end

默认的循环次数的引用变量名为 $velocityCount

在配置文件velocity.properties中做如下修改成你想要的:
# Default name of the loop counter
# variable reference.
directive.foreach.counter.name = velocityCount
 
# Default starting value of the loop
# counter variable reference.
directive.foreach.counter.initial.value = 1


velocity是否支持
break	？


<p>循环加index</p>
#foreach($item in ${data.users})
	#set($index = ${velocityCount} +1)
  ${index} ${item.id}	${item.name}	<br>
#end


#*
 #foreach($var in $arrays ) // 集合包含下面三种Vector, a Hashtable or an Array
#end
*#

#set($$allProducts = ${data.backups})

#foreach( $product in $allProducts )
<li>$product</li>
#end

## 通过下面的方法，可以取到key值，然后再通过key值获取相应的value
## 类似 php 的 foreach($arr as $key => $value)
#foreach( $key in $allProducts.keySet() )
<li>Key: $key -> Value: $allProducts.get($key)</li>
#end

#set($ $customerList = [])

#foreach( $customer in $customerList )
<tr><td>$velocityCount</td><td>$customer.Name</td></tr>
#end


<p>======================</p>

#set($all = "all")
#parse("include.vm");

after parse index: ${all}  <br/>

#include("include.vm");
after include index: ${all}

##include和#parse的作用都是引入本地文件
##区别：
##include可以有多个文件，用逗号分隔; #parse只能指定单个对象
##include被引入文件的内容将不会通过模板引擎解析

## 获取在预加载过程中定义的宏
#parse( "velocity/macro_var.vm" )
${STATIC_ROOT}


block demo

#@xxx


date

number

